{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,wBACjCC,EAASF,SAASC,cAAc,uBAChCE,EAAWH,SAASC,cAAc,yBAClCG,EAAYJ,SAASC,cAAc,0BACnCI,EAAaN,EAAQO,MACrBC,EAASJ,EAASG,MAClBE,EAAON,EAAOI,MAWpB,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAQC,QAAU,IAAIC,SAAQ,SAACC,EAASC,GACtCC,YAAW,WACLP,EACFK,EACEpB,EAAAuB,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,QAG/DO,EAAOrB,EAAAuB,OAAOG,QAAQ,sBAAqCD,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,GAElEA,E,IApBPP,EAAUoB,iBAAiB,SAE3B,WACE,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAQkB,IAAK,CAEhChB,EAAcgB,EADFpB,EAAaG,GAAQiB,EAAI,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector('input[name =\"delay\"]');\nconst stepEl = document.querySelector('input[name =\"step\"]');\nconst amountEl = document.querySelector('input[name =\"amount\"]');\nconst submitBtn = document.querySelector('button[type =\"submit\"]');\nconst delayValue = delayEl.value;\nconst amount = amountEl.value;\nconst step = stepEl.value;\n\nsubmitBtn.addEventListener('click', onClickSubmitBtn);\n\nfunction onClickSubmitBtn() {\n  for (let i = 1; i <= amount; i++) {\n    let delay = delayValue + step * (i - 1);\n    createPromise(i, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return (promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        );\n      } else {\n        reject(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  }));\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$delayEl","document","querySelector","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$delayValue","value","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","setTimeout","Notify","success","concat","failure","addEventListener","i"],"version":3,"file":"03-promises.9f0e96b5.js.map"}