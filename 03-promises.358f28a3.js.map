{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACAD,EAAAE,OAAOC,KAAK,CACVC,SAAU,kBAGZ,MAAMC,EAAUC,SAASC,cAAc,wBACjCC,EAASF,SAASC,cAAc,uBAChCE,EAAWH,SAASC,cAAc,yBAkBxC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAY,CAAET,SAAU,GAAGO,IAAYG,MAAO,GAAGF,KACjDG,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQN,GAERO,EAAOP,EAAU,GAElBD,EAAM,IAERU,MAAK,EAAClB,SAAEA,EAAQU,MAAEA,MACjBd,EAAAE,OAAOqB,QAAQ,uBAAqBnB,QAAiBU,MAAU,IAEhEU,OAAM,EAACpB,SAAEA,EAAQU,MAAEA,MAClBd,EAAAE,OAAOuB,QAAQ,sBAAoBrB,QAAeU,MAAU,G,CAlChDR,SAASC,cAAc,0BAE/BmB,iBAAiB,SAE3B,SAA0BC,GACxBA,EAAEC,iBAEF,MAAMC,EAAaC,OAAOzB,EAAQ0B,OAC5BC,EAASF,OAAOrB,EAASsB,OACzBE,EAAOH,OAAOtB,EAAOuB,OAE3B,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAEhCxB,EAAcwB,EADFL,EAAaI,GAAQC,EAAI,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nNotify.init({\n  position: 'center-center',\n});\n\nconst delayEl = document.querySelector('input[name =\"delay\"]');\nconst stepEl = document.querySelector('input[name =\"step\"]');\nconst amountEl = document.querySelector('input[name =\"amount\"]');\nconst submitBtn = document.querySelector('button[type =\"submit\"]');\n\nsubmitBtn.addEventListener('click', onClickSubmitBtn);\n\nfunction onClickSubmitBtn(e) {\n  e.preventDefault();\n\n  const delayValue = Number(delayEl.value);\n  const amount = Number(amountEl.value);\n  const step = Number(stepEl.value);\n\n  for (let i = 1; i <= amount; i++) {\n    let delay = delayValue + step * (i - 1);\n    createPromise(i, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const returnObj = { position: `${position}`, delay: `${delay}` };\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(returnObj);\n      } else {\n        reject(returnObj);\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","Notify","init","position","$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position1","delay1","returnObj","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","success","catch","failure","addEventListener","e","preventDefault","delayValue","Number","value","amount","step","i"],"version":3,"file":"03-promises.358f28a3.js.map"}