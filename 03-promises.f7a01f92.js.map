{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,wBACjCC,EAASF,SAASC,cAAc,uBAChCE,EAAWH,SAASC,cAAc,yBAkBxC,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAY,CAAEF,SAAU,GAAYG,OAATH,GAAYC,MAAO,GAASE,OAANF,IACjDG,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQN,GAERO,EAAOP,E,GAERD,E,IAEFU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARZ,SAAUc,EAAKF,EAALX,MACjBT,EAAAuB,OAAOC,QAAQ,uBAAwCb,OAAfU,EAAS,QAAYV,OAANW,EAAM,M,IAE9DG,OAAM,SAAAL,G,IAAGC,EAAQD,EAARZ,SAAUc,EAAKF,EAALX,MAClBT,EAAAuB,OAAOG,QAAQ,sBAAqCf,OAAfU,EAAS,QAAYV,OAANW,EAAM,M,IAlC9CnB,SAASC,cAAc,0BAE/BuB,iBAAiB,SAE3B,SAA0BC,GACxBA,EAAEC,iBAMF,IAJA,IAAMC,EAAaC,OAAO7B,EAAQ8B,OAC5BC,EAASF,OAAOzB,EAAS0B,OACzBE,EAAOH,OAAO1B,EAAO2B,OAElBG,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAEhC5B,EAAc4B,EADFL,EAAaI,GAAQC,EAAI,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector('input[name =\"delay\"]');\nconst stepEl = document.querySelector('input[name =\"step\"]');\nconst amountEl = document.querySelector('input[name =\"amount\"]');\nconst submitBtn = document.querySelector('button[type =\"submit\"]');\n\nsubmitBtn.addEventListener('click', onClickSubmitBtn);\n\nfunction onClickSubmitBtn(e) {\n  e.preventDefault();\n\n  const delayValue = Number(delayEl.value);\n  const amount = Number(amountEl.value);\n  const step = Number(stepEl.value);\n\n  for (let i = 1; i <= amount; i++) {\n    let delay = delayValue + step * (i - 1);\n    createPromise(i, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const returnObj = { position: `${position}`, delay: `${delay}` };\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(returnObj);\n      } else {\n        reject(returnObj);\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$delayEl","document","querySelector","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","returnObj","concat","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","_$position","_$delay","Notify","success","catch","failure","addEventListener","e","preventDefault","delayValue","Number","value","amount","step","i"],"version":3,"file":"03-promises.f7a01f92.js.map"}